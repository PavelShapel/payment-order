package com.pavelshapel.aws.lambda.service.corporation.model;

import com.amazonaws.services.dynamodbv2.datamodeling.*;
import com.pavelshapel.aws.lambda.service.corporation.model.converter.CorporationParentalDynamoDBTypeConverter;
import com.pavelshapel.aws.lambda.service.corporation.model.converter.CorporationTypedDynamoDBTypeConverter;
import com.pavelshapel.core.spring.boot.starter.api.model.*;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.util.Date;

import static com.pavelshapel.aws.lambda.service.corporation.model.Corporation.TABLE_NAME;

@Data
@NoArgsConstructor
@AllArgsConstructor
@DynamoDBTable(tableName = TABLE_NAME)
public class Corporation implements ParentalEntity<String, Corporation>, Versioned, Dated {
    public static final String TABLE_NAME = "corporation";

    @DynamoDBHashKey
    @DynamoDBAutoGeneratedKey
    private String id;

    @DynamoDBTypeConverted(converter = CorporationParentalDynamoDBTypeConverter.class)
    @DynamoDBAttribute
    private Corporation parent;

    @DynamoDBTypeConverted(converter = CorporationTypedDynamoDBTypeConverter.class)
    @DynamoDBAttribute
    private Typed<Type> typed;

    @DynamoDBAutoGeneratedTimestamp(strategy = DynamoDBAutoGenerateStrategy.CREATE)
    private Date createdDate;

    @DynamoDBAutoGeneratedTimestamp(strategy = DynamoDBAutoGenerateStrategy.ALWAYS)
    private Date lastModifiedDate;

    @DynamoDBVersionAttribute
    private Long version;

    @Override
    public int compareTo(Entity<String> entity) {
        return getId().compareTo(entity.getId());
    }
}

