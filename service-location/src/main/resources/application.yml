management:
  endpoint:
    health:
      show-details: always
      status:
        http-mapping:
          down: 500
          out_of_service: 503
          warning: 500
    shutdown:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health,prometheus
  health:
    probes:
      enabled: true
    random:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
server:
  port: 9001
spring:
  profiles: dev
  application:
    name: service-location
  mvc:
    throw-exception-if-no-handler-found: true
  resources:
    add-mappings: false
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/service-location
    username: postgres
    password: postgres
    initialization-mode: never
  jpa:
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQL10Dialect
    show-sql: false
    hibernate:
      ddl-auto: validate
  liquibase:
    enabled: true
    url: jdbc:postgresql://localhost:5432/service-location
    user: postgres
    password: postgres
    change-log: classpath:db/changelog/db.changelog-master.yml
---
server:
  port: 8001
spring:
  profiles: prod
  application:
    name: service-location
  mvc:
    throw-exception-if-no-handler-found: true
  resources:
    add-mappings: false
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/service-location
    username: postgres
    password: postgres
    initialization-mode: never
  jpa:
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQL10Dialect
    show-sql: true
    hibernate:
      ddl-auto: validate
  liquibase:
    enabled: true
    url: jdbc:postgresql://localhost:5432/service-location
    user: postgres
    password: postgres
    change-log: classpath:db/changelog/db.changelog-master.yml
